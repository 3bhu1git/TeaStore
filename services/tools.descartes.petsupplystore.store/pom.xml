<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>tools.descartes.petsupplystore</groupId>
	<artifactId>store</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>PetSupplyStore Store</name>
	<url>http://descartes.tools</url>

	<distributionManagement>
		<repository>
			<id>se-uw-nexus</id>
			<name>Releases</name>
			<url>https://se4.informatik.uni-wuerzburg.de/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>se-uw-nexus</id>
			<name>Snapshots</name>
			<url>https://se4.informatik.uni-wuerzburg.de/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>se-uw-nexus</id>
			<name>Public Repositories</name>
			<url>https://se4.informatik.uni-wuerzburg.de/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>


	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<!-- Internal Dependencies -->
		<dependency>
			<groupId>tools.descartes.petsupplystore</groupId>
			<artifactId>registryclient</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>tools.descartes.petsupplystore</groupId>
			<artifactId>dockerbase</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- WebApp Dependencies -->
		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>0.4</version>
		</dependency>

		<!-- Dependencies only needed for compilation -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>8.5.16</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>8.5.16</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>tools.descartes.petsupplystore</groupId>
			<artifactId>registry</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>classes</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>tools.descartes.petsupplystore</groupId>
			<artifactId>persistence</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>classes</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.fusesource</groupId>
			<artifactId>sigar</artifactId>
			<version>1.6.4</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>tools.descartes.petsupplystore.store</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<reuseForks>false</reuseForks>
					<forkCount>1</forkCount>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker</id>
			<activation>
				<property>
					<name>kieker</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.3.5</version>
						<executions>
							<execution>
								<id>build-image</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<buildArgs>
										<file>StandardDocker</file>
									</buildArgs>
								</configuration>
							</execution>
							<execution>
								<id>tag-push-latest</id>
								<goals>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<repository>descartesresearch/petsupplystore-store</repository>
									<tag>latest</tag>
								</configuration>
							</execution>
							<execution>
								<id>tag-push-version</id>
								<goals>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<repository>descartesresearch/petsupplystore-store</repository>
									<tag>${project.version}</tag>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>kieker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<!-- RENAME DOCKER FILE -->
				<plugins>
					<plugin>
						<groupId>com.coderplus.maven.plugins</groupId>
						<artifactId>copy-rename-maven-plugin</artifactId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<id>rename-file</id>
								<phase>compile</phase>
								<goals>
									<goal>rename</goal>
								</goals>
								<configuration>
									<sourceFile>${project.basedir}/KiekerDocker</sourceFile>
									<destinationFile>${project.basedir}/Dockerfile</destinationFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- COPY MONITORING.PROPERTIES -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-appCtx</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.basedir}</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>../../utilities/tools.descartes.petsupplystore.kieker/</directory>
											<includes>
												<include>kieker.monitoring.properties</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- COPY KIEKER LIBRARIES -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-appCtx</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/lib</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>../../utilities/tools.descartes.petsupplystore.kieker/src/main/webapp/WEB-INF/lib</directory>
											<includes>
												<include>libsigar-amd64-linux.so</include>
												<include>libsigar-x86-linux.so</include>
												<include>sigar-1.6.4.LICENSE</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- EDIT WEB.XML -->
					<plugin>
						<groupId>io.github.michaldo</groupId>
						<artifactId>nashorn-maven-plugin</artifactId>
						<version>0.0.1</version>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<configuration>
									<script>
										var Files = Java.type('java.nio.file.Files');
										var Paths
										= Java.type('java.nio.file.Paths');
										var content = new
										java.lang.String(Files.readAllBytes(Paths.get($basedir+'/src/main/webapp/WEB-INF/web.xml')));
										var insert = new
										java.lang.String(Files.readAllBytes(Paths.get($basedir+'/../../utilities/tools.descartes.petsupplystore.kieker/src/main/webapp/WEB-INF/web_kieker.txt')));

										content = content.replaceAll("./web-app>", '') + insert;
										Files.write(Paths.get($basedir +
										'/src/main/webapp/WEB-INF/web.xml'), content.getBytes());
									</script>
								</configuration>
								<goals>
									<goal>eval</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- BUILD DOCKER -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.3.5</version>
						<executions>
							<execution>
								<id>build-image</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
							</execution>
							<execution>
								<id>tag-push-latest</id>
								<goals>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<repository>descartesresearch/petsupplystore-store-kieker</repository>
									<tag>latest</tag>
								</configuration>
							</execution>
							<execution>
								<id>tag-push-version</id>
								<goals>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<repository>descartesresearch/petsupplystore-store-kieker</repository>
									<tag>${project.version}</tag>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
